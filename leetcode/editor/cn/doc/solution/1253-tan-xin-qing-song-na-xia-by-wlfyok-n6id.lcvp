### 代码

![image.png](https://pic.leetcode.cn/1688004082-zGbvfp-image.png)

* python3

```python
class Solution:
    def reconstructMatrix(self, upper: int, lower: int, colsum: List[int]) -> List[List[int]]:
        col = len(colsum)
        ans = [[0] * col for i in range(2)]
        # print(len(ans),len(ans[0]))
        for i,v in enumerate(colsum):
            if v == 2:
                ans[0][i] = ans[1][i] = 1
                upper -= 1
                lower -= 1
                if upper < 0 or lower < 0: return []
        # print(ans,upper,lower)
        for i,v in enumerate(colsum):
            if v == 1:
                if upper > 0:
                    upper -= 1
                    ans[0][i] = 1
                elif lower > 0:
                    lower -= 1
                    ans[1][i] = 1
                else:
                    return []
        # print(upper,lower)
        if lower != 0 or upper != 0: return []
        return ans
```

