### 解题思路

1、先确定在哪一行，再在这一行中查找
2、二维转一维

### 代码

* cpp

```cpp
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m = matrix.size() - 1;
 
        int row = 0;
        int col = 0;

        while (row < m) {
            int mid = row + (m - row +1) / 2;

            if (matrix[mid][col] == target) {
                return true;
            }
            if (matrix[mid][col] > target) {
                m = mid - 1;
            } else {
                row = mid;
            }
        }
        if (row >= matrix.size()) {
            return false;
        }
        vector<int> rowx = matrix[row];
        if (find(rowx.begin(), rowx.end(), target) != rowx.end()) {
            return true;
        }
        return false;
    }
};
```

二维转一维

* cpp

```cpp
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int left = 0;
        int right = matrix.size() * matrix[0].size() - 1;

        int n = matrix[0].size();

        while (left <= right) {
            int mid = left + (right - left) / 2;

            if (matrix[mid / n][mid % n] > target) {
                right = mid - 1;
            } else if (matrix[mid / n][mid % n] < target){
                left = mid + 1;
            } else {
                return true;
            }
        }
        return false;
    }
};
```

